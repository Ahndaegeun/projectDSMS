/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-09-27 02:18:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.MemberVO;
import vo.ApplicantVO;
import java.util.List;

public final class applicant_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("vo.ApplicantVO");
    _jspx_imports_classes.add("vo.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

List<ApplicantVO> list = (List<ApplicantVO>) request.getAttribute("applicantList");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>대덕 인재 개발원</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/applicant.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://uicdn.toast.com/grid/latest/tui-grid.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"body__container\">\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "main-nav.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("job", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getMember_job()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<main>\r\n");
      out.write("			<div class=\"btn-wrap\">\r\n");
      out.write("				<button type=\"button\" id=\"insert\">추가</button>\r\n");
      out.write("				<button type=\"button\" id=\"delete\">삭제</button>\r\n");
      out.write("        		<button type=\"button\" id=\"update\">저장</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"grid-wrap\">\r\n");
      out.write("				<div id=\"recruitGrid\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</main>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../js/jquery.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../js/global.js\"></script>\r\n");
      out.write("	<script src=\"https://uicdn.toast.com/grid/latest/tui-grid.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("const Grid = tui.Grid;  //인스턴스 객체 생성\r\n");
      out.write("let recruitGrid;\r\n");
      out.write("let recruitData = [\r\n");
for (ApplicantVO vo : list) {
      out.write("\r\n");
      out.write("	{\r\n");
      out.write("	name: \"");
      out.print(vo.getApplicant_name());
      out.write("\",\r\n");
      out.write("    age: \"");
      out.print(vo.getApplicant_age());
      out.write("\",\r\n");
      out.write("    tel: \"");
      out.print(vo.getApplicant_tel());
      out.write("\",\r\n");
      out.write("    score: \"");
      out.print(vo.getApplicant_score());
      out.write("\",\r\n");
      out.write("    pass: \"");
      out.print(vo.getApplicant_pass());
      out.write("\"\r\n");
      out.write("  	},\r\n");
}
      out.write("\r\n");
      out.write("]\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("recruitGrid = new Grid({\r\n");
      out.write("  el: document.getElementById('recruitGrid'),\r\n");
      out.write("  scrollX: true,\r\n");
      out.write("  rowHeaders: ['checkbox'],\r\n");
      out.write("  columns: [\r\n");
      out.write("\r\n");
      out.write("    {\r\n");
      out.write("      header: '학생명',\r\n");
      out.write("      name: 'name',\r\n");
      out.write("      editor: 'text',\r\n");
      out.write("      align: 'center'\r\n");
      out.write("    },\r\n");
      out.write("    {\r\n");
      out.write("      header: '나이',\r\n");
      out.write("      name: 'age',\r\n");
      out.write("      editor: 'text',\r\n");
      out.write("      align: 'center'\r\n");
      out.write("    },\r\n");
      out.write("    {\r\n");
      out.write("      header: '전화번호',\r\n");
      out.write("      name: 'tel',\r\n");
      out.write("      editor: 'text',\r\n");
      out.write("      align: 'center'\r\n");
      out.write("    },\r\n");
      out.write("    {\r\n");
      out.write("      header: '면접 점수',\r\n");
      out.write("      name: 'score',\r\n");
      out.write("      editor: 'text',\r\n");
      out.write("      align: 'center'\r\n");
      out.write("    },\r\n");
      out.write("    {\r\n");
      out.write("      header: '합격 여부',\r\n");
      out.write("      name: 'pass',\r\n");
      out.write("      editor: 'text',\r\n");
      out.write("      align: 'center'\r\n");
      out.write("    }\r\n");
      out.write("  ],\r\n");
      out.write("  data: recruitData\r\n");
      out.write("});\r\n");
      out.write("//----------------------------------------------------------------\r\n");
      out.write("let isEnd = false;\r\n");
      out.write("    \r\n");
      out.write("    $(function(){\r\n");
      out.write("        $(window).scroll(function(){\r\n");
      out.write("            let $window = $(this);\r\n");
      out.write("            let scrollTop = $window.scrollTop();\r\n");
      out.write("            let windowHeight = $window.height();\r\n");
      out.write("            let documentHeight = $(document).height();\r\n");
      out.write("			//console.log(\"documentHeight:\" + documentHeight + \" | scrollTop:\" + scrollTop + \" | windowHeight: \" + windowHeight );\r\n");
      out.write("            if( scrollTop + windowHeight + 30 > documentHeight ){\r\n");
      out.write("                fetchList();\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("        fetchList();\r\n");
      out.write("    })\r\n");
      out.write("    \r\n");
      out.write("    let fetchList = function(){\r\n");
      out.write("        if(isEnd == true){\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        let startNo = $(\"#recruitGrid\").last().data(\"no\") || 0;\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:\"/applicant\" +startNo,\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("//             data: {\r\n");
      out.write("//             	page : startNo\r\n");
      out.write("//             }\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            success: function(result){\r\n");
      out.write("\r\n");
      out.write("                let length = result.data.length;\r\n");
      out.write("                if( length < 5 ){\r\n");
      out.write("                    isEnd = true;\r\n");
      out.write("                }\r\n");
      out.write("                $.each(result.data, function(index, vo){\r\n");
      out.write("                    renderList(false, vo);\r\n");
      out.write("                })\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    let renderList = function(mode, vo){\r\n");
      out.write("        // \r\n");
      out.write("        let html = \"<li data-no='\"+ vo.no +\"'>\" +\r\n");
      out.write("            \"<strong>\"+ vo.name +\"</strong>\" +\r\n");
      out.write("            \"<p>\"+ vo.content.replace(/\\n/gi, \"<br>\") +\"</p>\" +\r\n");
      out.write("            \"<strong></strong>\" +\r\n");
      out.write("            \"<a href='#' data-no='\"+ vo.no +\"'>삭제</a>\" +\r\n");
      out.write("            \"</li>\"\r\n");
      out.write("        \r\n");
      out.write("        if( mode ){\r\n");
      out.write("            $(\"#recruitGrid\").prepend(html);\r\n");
      out.write("            console.log(html);\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("            $(\"#recruitGrid\").append(html);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    $(\"#insert\").click(function(){\r\n");
      out.write("    	$('#recruitGrid').html(\"\")\r\n");
      out.write("    	recruitData = [\r\n");
      out.write("    		{\r\n");
      out.write("       			name: \"\",\r\n");
      out.write("       		    age: \"\",\r\n");
      out.write("       		    tel: \"\",\r\n");
      out.write("       		    score: \"\",\r\n");
      out.write("       		    pass: \"\"\r\n");
      out.write("        	},\r\n");
      out.write("    		");
for (ApplicantVO vo : list) {
      out.write("\r\n");
      out.write("    			{\r\n");
      out.write("    			name: \"");
      out.print(vo.getApplicant_name());
      out.write("\",\r\n");
      out.write("    		    age: \"");
      out.print(vo.getApplicant_age());
      out.write("\",\r\n");
      out.write("    		    tel: \"");
      out.print(vo.getApplicant_tel());
      out.write("\",\r\n");
      out.write("    		    score: \"");
      out.print(vo.getApplicant_score());
      out.write("\",\r\n");
      out.write("    		    pass: \"");
      out.print(vo.getApplicant_pass());
      out.write("\"\r\n");
      out.write("    		  	},\r\n");
      out.write("    		");
}
      out.write("\r\n");
      out.write("    	]\r\n");
      out.write("    	\r\n");
      out.write("    	recruitGrid = new Grid({\r\n");
      out.write("    		  el: document.getElementById('recruitGrid'),\r\n");
      out.write("    		  scrollX: true,\r\n");
      out.write("    		  rowHeaders: ['checkbox'],\r\n");
      out.write("    		  columns: [\r\n");
      out.write("    		    {\r\n");
      out.write("    		      header: '학생명',\r\n");
      out.write("    		      name: 'name',\r\n");
      out.write("    		      editor: 'text',\r\n");
      out.write("    		      align: 'center'\r\n");
      out.write("    		    },\r\n");
      out.write("    		    {\r\n");
      out.write("    		      header: '나이',\r\n");
      out.write("    		      name: 'age',\r\n");
      out.write("    		      editor: 'text',\r\n");
      out.write("    		      align: 'center'\r\n");
      out.write("    		    },\r\n");
      out.write("    		    {\r\n");
      out.write("    		      header: '전화번호',\r\n");
      out.write("    		      name: 'tel',\r\n");
      out.write("    		      editor: 'text',\r\n");
      out.write("    		      align: 'center'\r\n");
      out.write("    		    },\r\n");
      out.write("    		    {\r\n");
      out.write("    		      header: '면접 점수',\r\n");
      out.write("    		      name: 'score',\r\n");
      out.write("    		      editor: 'text',\r\n");
      out.write("    		      align: 'center'\r\n");
      out.write("    		    },\r\n");
      out.write("    		    {\r\n");
      out.write("    		      header: '합격 여부',\r\n");
      out.write("    		      name: 'pass',\r\n");
      out.write("    		      editor: 'text',\r\n");
      out.write("    		      align: 'center'\r\n");
      out.write("    		    }\r\n");
      out.write("    		  ],\r\n");
      out.write("    		  data: recruitData\r\n");
      out.write("    		});\r\n");
      out.write("    })\r\n");
      out.write("    $(\"#update\").click(function() {\r\n");
      out.write("    	const { rowKey, columnName } = recruitGrid.getFocusedCell();\r\n");
      out.write("    	if (rowKey && columnName) {\r\n");
      out.write("    		recruitGrid.finishEditing(rowKey, columnName);\r\n");
      out.write("    	}\r\n");
      out.write("    	const { updatedRows } = recruitGrid.getModifiedRows();\r\n");
      out.write("      \r\n");
      out.write("    	for(const str of updatedRows) {\r\n");
      out.write("    		delete str.rowKey\r\n");
      out.write("    		delete str._attributes\r\n");
      out.write("    	console.log(JSON.stringify(updatedRows))\r\n");
      out.write("    	\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("      url:'/applicant?cmd=add',\r\n");
      out.write("      method: 'POST',\r\n");
      out.write("      data: {\r\n");
      out.write("    	  addJson :JSON.stringify(updatedRows),\r\n");
      out.write("      },\r\n");
      out.write("      success: function(res){\r\n");
      out.write("		console.log(res)\r\n");
      out.write("		\r\n");
      out.write("		if(res.trim() === 'true') {\r\n");
      out.write("			alert('성공')\r\n");
      out.write("			location.reload()\r\n");
      out.write("		} else {\r\n");
      out.write("			alert('실패')\r\n");
      out.write("		}\r\n");
      out.write("      },\r\n");
      out.write("      error: function(e) {\r\n");
      out.write("    	  console.log(e)\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("  	  })\r\n");
      out.write("    })\r\n");
      out.write("    $('#delete').click(function(){\r\n");
      out.write("        const selectedValues   = recruitGrid.getValue(recruitGrid.getCheckedRowKeys(), \"name\");\r\n");
      out.write("    	const deleteRows = recruitGrid.getCheckedRows();\r\n");
      out.write("    	\r\n");
      out.write("    	for(const ele of deleteRows) {\r\n");
      out.write("	    	delete ele.rowKey;\r\n");
      out.write("	    	delete ele.rowSpanMap;\r\n");
      out.write("	    	delete ele.sortKey;\r\n");
      out.write("	    	delete ele.uniqueKey;\r\n");
      out.write("	    	delete ele._attributes;\r\n");
      out.write("	    	delete ele._disabledPriority;\r\n");
      out.write("	    	delete ele._relationListItemMap;\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("\r\n");
      out.write("    	$.ajax({\r\n");
      out.write("            url:'/applicant?cmd=delete',\r\n");
      out.write("            method: 'POST',\r\n");
      out.write("            data: {\r\n");
      out.write("          	  deleteJson : JSON.stringify(deleteRows),\r\n");
      out.write("            	\r\n");
      out.write("            },\r\n");
      out.write("            success: function(res){\r\n");
      out.write("      		console.log(res)\r\n");
      out.write("      		if(res.trim() === 'true') {\r\n");
      out.write("      			alert('성공')\r\n");
      out.write("      			location.reload()\r\n");
      out.write("      		} else {\r\n");
      out.write("      			alert('실패')\r\n");
      out.write("      		}\r\n");
      out.write("            },\r\n");
      out.write("            error: function(e) {\r\n");
      out.write("          	  console.log(e)\r\n");
      out.write("          	  	console.log(deleteRows)\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        	  })\r\n");
      out.write("          })\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//----------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("Grid.applyTheme('striped');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// $('.selectbox').on('click', function() {\r\n");
      out.write("// 	$.ajax({\r\n");
      out.write("// 		type : \"get\",\r\n");
      out.write("// 		url : \"/ajaxView/applicantDo.jsp\",\r\n");
      out.write("// 		data: {roomNum : $(this).val()},\r\n");
      out.write("// 		success: function(res) {\r\n");
      out.write("// 			recruitData = res\r\n");
      out.write("// 		}\r\n");
      out.write("// 	})\r\n");
      out.write("// })\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
