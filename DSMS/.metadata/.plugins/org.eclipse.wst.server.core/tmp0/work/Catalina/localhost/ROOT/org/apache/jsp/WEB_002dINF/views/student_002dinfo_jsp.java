/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-09-27 00:47:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.StudentInfoVO;
import java.util.List;

public final class student_002dinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vo.StudentInfoVO");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

List<StudentInfoVO> list = (List<StudentInfoVO>)request.getAttribute("list");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>대덕 인재 개발원</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/student-info.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"https://uicdn.toast.com/grid/latest/tui-grid.css\" />\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"body__container\">\n");
      out.write("\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "main-nav.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("job", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getMember_job()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("\n");
      out.write("	<main>\n");
      out.write("	\n");
      out.write("		<section>\n");
      out.write("			<div class=\"room-number-wrap\">\n");
      out.write("				<select class=\"room\">\n");
      out.write("					<option value=\"301호\">301호</option>\n");
      out.write("					<option value=\"302호\">302호</option>					\n");
      out.write("					<option value=\"401호\">401호</option>\n");
      out.write("					<option value=\"402호\">402호</option>\n");
      out.write("					<option value=\"403호\">403호</option>\n");
      out.write("					<option value=\"404호\">404호</option>\n");
      out.write("					<option value=\"405호\">405호</option>\n");
      out.write("					<option value=\"406호\">406호</option>\n");
      out.write("				</select>\n");
      out.write("			</div>\n");
      out.write("			<div id=\"recruitGrid\"></div>\n");
      out.write("			<button class=\"modify-btn\" type=\"button\">수정하기</button>\n");
      out.write("		</section>\n");
      out.write("\n");
      out.write("	</main>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script src=\"https://uicdn.toast.com/grid/latest/tui-grid.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../js/jquery.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../js/global.js\"></script>\n");
      out.write("<script>\n");
      out.write("const Grid = tui.Grid;  //인스턴스 객체 생성\n");
      out.write("\n");
      out.write("let recruitGrid = new Grid({\n");
      out.write("  el: document.getElementById('recruitGrid'),\n");
      out.write("  scrollX: true,\n");
      out.write("  columns: [\n");
      out.write("    {\n");
      out.write("      header: '이름',\n");
      out.write("      name: 'name',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '나이',\n");
      out.write("      name: 'age',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '반',\n");
      out.write("      name: 'room',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '주소',\n");
      out.write("      name: 'addr',\n");
      out.write("      editor: 'text'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '전화번호',\n");
      out.write("      name: 'tel',\n");
      out.write("      editor: 'text',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '자격증',\n");
      out.write("      name: 'license',\n");
      out.write("      editor: 'text'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '학력',\n");
      out.write("      name: 'education',\n");
      out.write("      editor: 'text',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '초급 프로젝트',\n");
      out.write("      name: 'basic-project',\n");
      out.write("      editor: 'text',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '중급 프로젝트',\n");
      out.write("      name: 'middle-project',\n");
      out.write("      editor: 'text',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '최종 프로젝트',\n");
      out.write("      name: 'last-project',\n");
      out.write("      editor: 'text',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("      header: '수료구분',\n");
      out.write("      name: 'graduate',\n");
      out.write("      editor: 'text',\n");
      out.write("      align: 'center'\n");
      out.write("    },\n");
      out.write("    {\n");
      out.write("    	header: 'idx',\n");
      out.write("    	name: 'idx',\n");
      out.write("    	hidden: true\n");
      out.write("    }\n");
      out.write("  ],\n");
      out.write("  data: {\n");
      out.write("	  contentType : 'application/json',\n");
      out.write("	  api: {\n");
      out.write("		  readData: {\n");
      out.write("			  url: '/student?cmd=info&roomNumber=' + $('.room').val().substring(0, 3),\n");
      out.write("			  method: 'get'\n");
      out.write("		  }\n");
      out.write("	  }\n");
      out.write("  }\n");
      out.write("});\n");
      out.write("\n");
      out.write("//recruitGrid.resetData(newData); \n");
      out.write("Grid.applyTheme('striped'); \n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\" src=\"../js/student-info.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
