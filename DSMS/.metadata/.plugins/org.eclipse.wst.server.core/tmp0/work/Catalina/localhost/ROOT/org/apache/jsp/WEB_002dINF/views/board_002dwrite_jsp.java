/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-09-27 01:16:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import vo.FileVO;
import vo.BoardVO;

public final class board_002dwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("vo.FileVO");
    _jspx_imports_classes.add("vo.BoardVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	");

	BoardVO boardInfo = (BoardVO) request.getAttribute("boardInfo");
	
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>대덕 인재 개발원</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/board-write.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://uicdn.toast.com/editor/latest/toastui-editor.min.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"body__container\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/main-nav.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("job", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getMember_job()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("		<main>\r\n");
      out.write("			<article class=\"board-write-wrap\">\r\n");
      out.write("				<form id=\"write-wrap-frm\" method=\"post\"\r\n");
      out.write("					action=\"");
      out.print(request.getContextPath() );
      out.write("/board?cmd=write\" enctype=\"multipart/form-data\">\r\n");
      out.write("					<ul class=\"top\">\r\n");
      out.write("						<li class=\"title-wrap\">\r\n");
      out.write("							<input type=\"text\" class=\"title\" name=\"board_title\" placeholder=\"제목을 입력하세요.\">\r\n");
      out.write("							<button type=\"button\" class=\"write-btn\">작성</button>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li class=\"description\">\r\n");
      out.write("							<div class=\"radio-wrap\">\r\n");
      out.write("								<label>\r\n");
      out.write("									<input type=\"radio\" name=\"board_category\" value=\"2\">공지</label>\r\n");
      out.write("								<label>\r\n");
      out.write("									<input type=\"radio\" name=\"board_category\" value=\"1\">긴급</label>\r\n");
      out.write("								<label><input type=\"radio\" name=\"board_category\" value=\"3\">자유</label>\r\n");
      out.write("							</div> \r\n");
      out.write("							<input type=\"file\" name=\"profile\" class=\"file\">\r\n");
      out.write("						</li>\r\n");
      out.write("					</ul>\r\n");
      out.write("					<div id=\"editor\"></div>\r\n");
      out.write("					<input type=\"hidden\" name=\"board_content\" id=\"board_content\"> \r\n");
      out.write("					<!-- value값 session에서 넣기 -->\r\n");
      out.write("					<input type=\"hidden\" name=\"member_idx\" id=\"member_idx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.getMember_idx()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</article>\r\n");
      out.write("		</main>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../js/jquery.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../js/global.js\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		const Editor = toastui.Editor;\r\n");
      out.write("\r\n");
      out.write("		const editor = new Editor({\r\n");
      out.write("			el : document.querySelector('#editor'),\r\n");
      out.write("			height : '480px',\r\n");
      out.write("			initialEditType : 'wysiwyg',\r\n");
      out.write("			previewStyle : 'vertical'\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(function() {\r\n");
      out.write("			$(\".write-btn\").on(\"click\", function() { //작성을 눌렀을때\r\n");
      out.write("				if($(\"input[name='board_category']:checked\").length==0){\r\n");
      out.write("					alert('카테고리를 체크하세요');\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$('#board_content').val(editor.getMarkdown());\r\n");
      out.write("				$(\"#write-wrap-frm\").submit();\r\n");
      out.write("			})\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(function(){\r\n");
      out.write("			\r\n");
      out.write("		    $(\"#toggle_id\").bind(\"click\", function(){\r\n");
      out.write("\r\n");
      out.write("		        if($(\"#toggle_id\").val()==0){\r\n");
      out.write("		            $(\"#toggle_id\").val(1); \r\n");
      out.write("		        }\r\n");
      out.write("\r\n");
      out.write("		        else{\r\n");
      out.write("		            $(\"#toggle_id\").val(0);\r\n");
      out.write("		        }\r\n");
      out.write("		        \r\n");
      out.write("		        \r\n");
      out.write("		        var isHide=$(\"#toggle_id\").val();\r\n");
      out.write("\r\n");
      out.write("		        if(isHide==1){\r\n");
      out.write("		            // Button 숨기기\r\n");
      out.write("		            $(\"#admin_id\").hide();\r\n");
      out.write("		        }\r\n");
      out.write("\r\n");
      out.write("		        else{\r\n");
      out.write("		            // Button 보이기\r\n");
      out.write("		            $(\"#admin_id\").show();\r\n");
      out.write("		        }\r\n");
      out.write("\r\n");
      out.write("		    });\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
